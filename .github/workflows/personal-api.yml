name: Personal API Updater

on:
  schedule:
    - cron: "0 */4 * * *" # Every 4 hours
  workflow_dispatch:

jobs:
  update-api-data:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Generate Personal API Data
        run: |
          cat > api.json << 'EOF'
          {
            "developer": {
              "name": "CrayFish0",
              "status": "coding",
              "current_focus": "Flutter Development",
              "coffee_cups_today": 3,
              "lines_of_code_today": 247,
              "favorite_language": "Dart",
              "current_time": "",
              "mood": "ðŸš€",
              "availability": "open_to_opportunities",
              "fun_fact": "Did you know? Crabs can regenerate lost limbs!"
            },
            "stats": {
              "github_followers": 0,
              "repositories": 0,
              "commits_this_week": 0,
              "pull_requests": 0,
              "issues_closed": 0
            },
            "current_projects": [
              {
                "name": "FlutterCraft",
                "description": "Cross-platform mobile app",
                "progress": 75,
                "tech_stack": ["Flutter", "Dart", "Firebase"]
              },
              {
                "name": "GameDev Adventure",
                "description": "Learning game development",
                "progress": 45,
                "tech_stack": ["Godot", "GDScript"]
              }
            ],
            "learning": [
              "Advanced Flutter Animations",
              "Game Development Patterns",
              "Cloud Architecture",
              "AI/ML Integration"
            ],
            "last_updated": ""
          }
          EOF

          # Update timestamp
          node -e "
            const fs = require('fs');
            const data = JSON.parse(fs.readFileSync('api.json', 'utf8'));
            data.developer.current_time = new Date().toISOString();
            data.last_updated = new Date().toISOString();
            fs.writeFileSync('api.json', JSON.stringify(data, null, 2));
          "

      - name: Create API Documentation
        run: |
          cat > API.md << 'EOF'
          # ðŸš€ CrayFish0 Personal API

          A real-time API about me! Access my current status, projects, and stats.

          ## Endpoints

          ### Base URL
          ```
          https://raw.githubusercontent.com/CrayFish0/CrayFish0/main/api.json
          ```

          ### Example Response
          ```json
          {
            "developer": {
              "name": "CrayFish0",
              "status": "coding",
              "current_focus": "Flutter Development",
              "coffee_cups_today": 3,
              "mood": "ðŸš€",
              "availability": "open_to_opportunities"
            }
          }
          ```

          ## Usage Examples

          ### JavaScript
          ```javascript
          fetch('https://raw.githubusercontent.com/CrayFish0/CrayFish0/main/api.json')
            .then(response => response.json())
            .then(data => console.log(data.developer.mood));
          ```

          ### Python
          ```python
          import requests

          response = requests.get('https://raw.githubusercontent.com/CrayFish0/CrayFish0/main/api.json')
          data = response.json()
          print(f"Current mood: {data['developer']['mood']}")
          ```

          ### cURL
          ```bash
          curl -s https://raw.githubusercontent.com/CrayFish0/CrayFish0/main/api.json | jq '.developer.status'
          ```

          ---
          *Updated automatically every 4 hours via GitHub Actions* âš¡
          EOF

      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add api.json API.md
          git diff --quiet && git diff --staged --quiet || git commit -m "ðŸ”„ Update Personal API data"
          git push
